@mixin position($type, $positions, $values, $z: null) {
  position: $type;
  z-index: $z;

  $index: 1 !default;

  @each $position in $positions {
    #{$position}: nth($values, $index);

    @if length($positions) == length($values) {
      $index: $index + 1;
    }
  }  
}

// Instances
@mixin absolute($positions, $values, $z: null) {
  @include position(absolute, $positions, $values, $z);
}

@mixin relative($positions, $values, $z: null) {
  @include position(relative, $positions, $values, $z);
}

@mixin fixed($positions, $values, $z: null) {
  @include position(fixed, $positions, $values, $z);
}

@mixin sticky($value, $z: null) {
  @include position(sticky, top, $value, $z);
}

// @include position(absolute, top left, 0, 10);
// @include position(absolute, top left, 0 10%, 10);
// @include absolute(top left, 0 10%, 10);
// @include relative(top left, 10% 10%, 10);
// @include fixed(top left bottom, right, 0 0, 10);
// @include sticky(10%, 10);